{"file":"/home/hernan/Desktop/Projects/templates/nodejs-solid-template/src/modules/shared/adapters/WinstonLogger.ts","mappings":";;;;;;;;;;;;;;;AAAA,yCAAuC;AACvC,sDAA+D;AAG/D,IAAK,MAIJ;AAJD,WAAK,MAAM;IACT,yBAAe,CAAA;IACf,uBAAa,CAAA;IACb,yBAAe,CAAA;AACjB,CAAC,EAJI,MAAM,KAAN,MAAM,QAIV;AAGM,IAAM,aAAa,GAAnB,MAAM,aAAa;IAGxB;QACE,IAAI,CAAC,MAAM,GAAG,iBAAO,CAAC,YAAY,CAAC;YACjC,MAAM,EAAE,iBAAO,CAAC,MAAM,CAAC,OAAO,CAC5B,iBAAO,CAAC,MAAM,CAAC,WAAW,EAAE,EAC5B,iBAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EACtC,iBAAO,CAAC,MAAM,CAAC,KAAK,EAAE,EACtB,iBAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,EACzB,iBAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CACxB;YACD,UAAU,EAAE;gBACV,IAAI,iBAAO,CAAC,UAAU,CAAC,OAAO,EAAE;gBAChC,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC;oBAC1B,QAAQ,EAAE,QAAQ,MAAM,CAAC,KAAK,MAAM;oBACpC,KAAK,EAAE,MAAM,CAAC,KAAK;iBACpB,CAAC;gBACF,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC;oBAC1B,QAAQ,EAAE,QAAQ,MAAM,CAAC,KAAK,MAAM;oBACpC,KAAK,EAAE,MAAM,CAAC,KAAK;iBACpB,CAAC;gBACF,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC;oBAC1B,QAAQ,EAAE,QAAQ,MAAM,CAAC,IAAI,MAAM;oBACnC,KAAK,EAAE,MAAM,CAAC,IAAI;iBACnB,CAAC;aACH;SACF,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,OAAe;QACnB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IACD,KAAK,CAAC,OAAuB;QAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IACD,IAAI,CAAC,OAAe;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;CACF,CAAA;AAvCY,aAAa;IADzB,IAAA,sBAAU,GAAE;;GACA,aAAa,CAuCzB;AAvCY,sCAAa","names":[],"sources":["/home/hernan/Desktop/Projects/templates/nodejs-solid-template/src/modules/shared/adapters/WinstonLogger.ts"],"sourcesContent":["import { injectable } from \"inversify\";\nimport winston, { Logger as WinstonLoggerType } from \"winston\";\nimport { Logger } from \"../interfaces/Logger\";\n\nenum Levels {\n  DEBUG = \"debug\",\n  INFO = \"info\",\n  ERROR = \"error\",\n}\n\n@injectable()\nexport class WinstonLogger implements Logger {\n  private logger: WinstonLoggerType;\n\n  constructor() {\n    this.logger = winston.createLogger({\n      format: winston.format.combine(\n        winston.format.prettyPrint(),\n        winston.format.errors({ stack: true }),\n        winston.format.splat(),\n        winston.format.colorize(),\n        winston.format.simple()\n      ),\n      transports: [\n        new winston.transports.Console(),\n        new winston.transports.File({\n          filename: `logs/${Levels.DEBUG}.log`,\n          level: Levels.DEBUG,\n        }),\n        new winston.transports.File({\n          filename: `logs/${Levels.ERROR}.log`,\n          level: Levels.ERROR,\n        }),\n        new winston.transports.File({\n          filename: `logs/${Levels.INFO}.log`,\n          level: Levels.INFO,\n        }),\n      ],\n    });\n  }\n\n  debug(message: string): void {\n    this.logger.debug(message);\n  }\n  error(message: string | Error): void {\n    this.logger.error(message);\n  }\n  info(message: string): void {\n    this.logger.info(message);\n  }\n}\n"],"version":3}